#!/bin/bash

# =============================
# FUNCTION
# =============================

usage () {
  echo "$1 usage: -FULL_NODE (Y|N) "
}

# =============================
# PREAMBLE
# =============================

if [[ "${OSTYPE}" != "linux-gnu"* && "${OSTYPE}" != "darwin"* ]]
then
  echo "error: only linux and macOS supported"
  exit 1
fi

if [[ "$#" != "2" ]]
then
  usage "error: missing argument."
  exit 1
fi

if [[ "$1" != "-FULL_NODE" ]]
then
  usage "error: missing argument -FULL_NODE."
  exit 1
fi

if [[ "$2" != "Y" && "$2" != "N" ]]
then
  usage "error: invalid argument -FULL_NODE."
  exit 1
fi

# =============================
# VARIABLES
# =============================

DOCKER_FILE=src/main/docker/Dockerfile
BUILD_DIR=build
TAG_ORG=shlibnet
TAG_ID=bitcoin-server
TAG_VERSION=latest
TAG_PREFIX="$TAG_ORG/$TAG_ID"
TAG="$TAG_PREFIX:$TAG_VERSION"
SERVER_DOCKER_GITUSER=ccrepo
SERVER_DOCKER_BITCOIN_VERSION=
#v27.0
FULL_NODE=$2

if [[ "${OSTYPE}" == "darwin"* ]]
then
  PROGRESS_PARAM='--progress=plain'
fi

# =============================
# ACTION
# =============================

echo "TAG_PREFIX='${TAG_PREFIX}'"

for i in ` (docker ps 2>&1) | grep -v 'CONTAINER ID' | grep "${TAG_PREFIX}" | cut -d' ' -f1`
do
  echo "stopping container $i"
  docker stop "$i" 2>/dev/null
  sleep 5
done

for i in ` (docker ps --all 2>&1) | grep -v 'CONTAINER ID' | grep "${TAG_PREFIX}" | cut -d' ' -f1 `
do
  echo "removing container $i"
  docker rm "$i"
done

for i in ` (docker images -a 2>&1) | grep -v 'REPOSITORY' | egrep "${TAG_PREFIX}|ubuntu(.*)22.04" | awk '{ print $3 }' `
do
  echo "removing image $i"
  docker rmi -f "$i"
done

docker images -a

cd ..

pwd

if [[ ! -f "$DOCKER_FILE" ]]
then
  echo "docker file '$DOCKER_FILE' missing"
  exit 1
fi

echo dockerfile "$DOCKER_FILE"

rm -fr "$BUILD_DIR" 2>/dev/null

if [[ -d "$BUILD_DIR"  ]]
then
  echo "dir '$BUILD_DIR' could not be deleted"
  exit 1
fi

mkdir -p "$BUILD_DIR"

if [[ ! -d "$BUILD_DIR" ]]
then
  echo "dir '$BUILD_DIR' could not be created"
  exit 1
fi

# DO NOT PRUNE ALL docker buildx prune -f

docker build $PROGRESS_PARAM --rm -f "$DOCKER_FILE"  --build-arg "SERVER_DOCKER_GITUSER=$SERVER_DOCKER_GITUSER"  --build-arg "SERVER_DOCKER_BITCOIN_VERSION=$SERVER_DOCKER_BITCOIN_VERSION" --build-arg "FULL_NODE=$FULL_NODE" --build-arg "CACHEBUST=$(date +%s)" -t "$TAG" "$BUILD_DIR"

if [[ "$?" != "0" ]]
then
  echo "docker build command failed"
  exit 1
fi

docker images

if [[ "${FULL_NODE}" == "Y" ]]
then
  BITCOIN_VOLUME="`( docker volume ls 2>/dev/null ) | grep -v 'VOLUME NAME' | awk '{ print $2}' | grep '^bitcoinfs$' `"
  echo "BITCOIN_VOLUME=${BITCOIN_VOLUME}"

  if [[ "${BITCOIN_VOLUME}" == "" ]]
  then
    if [[ -d /data/bitcoin/volumes/1/bitcoinfs ]]
    then
      echo "creating volume 'bitcoinfs'."
    
      docker volume create --driver local --opt type=none --opt device=/data/bitcoin/volumes/1/bitcoinfs --opt o=bind bitcoinfs
    
      if [[ "$?" != "0" ]]
      then
        echo "could not create volume 'bitcoinfs'."
        exit 1
      fi
    fi
  fi

  echo "starting container '$TAG_PREFIX'"

  VOLUME_COUNT="`docker volume ls | grep bitcoinfs | wc -l | awk '{print $1}'`"
 
  if [[ "${VOLUME_COUNT}" == "0" ]]
  then
    echo "running without /data volume"
    docker run --name "$TAG_ID" -d -p "8181:8080"  -p "2222:22" -p "18444:18444" "$TAG_PREFIX"
  else
    echo "running with /data volume"
    docker run --name "$TAG_ID" -d -p "8180:8080"  -p "2222:22" -p "18444:18444" -v bitcoinfs:/root/.bitcoin "$TAG_PREFIX"
  fi

else
  echo "running"
  docker run --name "$TAG_ID" -d -p "8180:8080"  -p "2222:22" -p "18444:18444" "$TAG_PREFIX"
fi

sleep 10

docker ps --all

docker exec -it "$TAG_ID" bash
